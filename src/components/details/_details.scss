@import "../../globals/scss/common";

@include exports("details") {

  .govuk-c-details {
    @include govuk-font-regular-19;
    @include govuk-text-colour;
    @include govuk-responsive-margin($govuk-spacing-responsive-6, "bottom");

    display: block;
  }

  .govuk-c-details__summary {
    // Make the focus outline shrink-wrap the text content of the summary
    display: inline-block;

    // Absolutely position the marker against this element
    position: relative;

    margin-bottom: $govuk-spacing-scale-1;

    // Allow for absolutely positioned marker and align with disclosed text
    padding-left: $govuk-spacing-scale-4 + $govuk-border-width;

    // Style the summary to look like a link...
    color: $govuk-link-colour;
    cursor: pointer;
  }

  // ...but only underline the text, not the arrow
  .govuk-c-details__summary-text {
    text-decoration: underline;
  }

  .govuk-c-details__summary:hover {
    color: $govuk-link-hover-colour;
  }

  .govuk-c-details__summary:focus {
    // -1px offset fixes gap between background and outline in Firefox
    outline: ($govuk-focus-width + 1px) solid $govuk-focus-colour;
    outline-offset: -1px;
    background: $govuk-focus-colour;
  }

  // Remove the default details marker so we can style our own consistently and
  // ensure it displays in Firefox (see implementation.md for details)
  .govuk-c-details__summary::-webkit-details-marker {
    display: none;
  }

  // Append our own open / closed marker using a pseudo-element
  .govuk-c-details__summary::before {
    // Marker ('arrow') definition
    $marker-size: 14px;
    $marker-perpendicular: $marker-size / 2;

    // Needs to be manually calculated when $marker-size changes to produce an
    // equilateral triangle:
    // sqrt(($marker-size * $marker-size) - ($marker-size / 2) * ($marker-size / 2))
    $marker-longest-side: 12.1244px;

    content: "";
    position: absolute;

    top: 0;
    bottom: 0;
    left: 0;

    height: 0;

    margin: auto;

    // Ensure marker is rendered correctly if browser colours are overridden â€“
    // without it the transparent borders become visible which results in a
    // square.
    clip-path: polygon(0% 0%, 100% 50%, 0% 100%);

    border-width: $marker-perpendicular 0 $marker-perpendicular $marker-longest-side;
    border-style: solid;
    border-color: transparent;
    border-left-color: currentColor;

    .govuk-c-details[open] > & {
      clip-path: polygon(0% 0%, 50% 100%, 100% 0%);

      border-width: $marker-longest-side $marker-perpendicular 0 $marker-perpendicular;
      border-color: transparent;
      border-top-color: currentColor;
    }
  }

  .govuk-c-details__text {
    padding: $govuk-spacing-scale-3;
    padding-left: $govuk-spacing-scale-4;
    border-left: $govuk-border-width solid $govuk-border-colour;
  }

  .govuk-c-details__text p {
    margin-top: 0;
    margin-bottom: em($govuk-spacing-scale-4, 19px);
  }

  .govuk-c-details__text p:last-child {
    margin-bottom: 0;
  }
}
